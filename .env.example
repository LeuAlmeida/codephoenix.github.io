# GitHub Scanner - Configurações de Ambiente
# Copie este arquivo para .env e preencha com seus valores reais

# Token de acesso pessoal do GitHub
# Obtenha em: https://github.com/settings/tokens
# Permissões necessárias: public_repo (para repositórios públicos)
GITHUB_TOKEN=ghp_xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# ========================================
# TERMOS DE BUSCA - EXEMPLOS POR CATEGORIA
# ========================================
# Use vírgulas para separar múltiplos termos

# EMAILS (o scanner detecta automaticamente)
# SEARCH_TERM=user@example.com,admin@company.org

# URLs E DOMINIOS
# SEARCH_TERM=https://api.example.com,company.internal,http://localhost:3000

# TOKENS E API KEYS
# SEARCH_TERM=ghp_1234567890abcdef,sk-1234567890abcdef,Bearer eyJhbGciOiJIUzI1NiJ9

# AWS CREDENTIALS
# SEARCH_TERM=AKIAIOSFODNN7EXAMPLE,wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

# DATABASE URLs
# SEARCH_TERM=mongodb://user:pass@host:port/db,mysql://root:password@localhost/database

# SENHAS E SECRETS
# SEARCH_TERM=password123,mysecretkey,admin_password

# ========================================
# EXEMPLOS DE COMBINAÇÕES MÚTIPLAS
# ========================================
# Você pode misturar diferentes tipos de dados!

# Auditoria completa de uma empresa
# SEARCH_TERM=@company.com,company.internal,ghp_,AKIA,company-api-key

# Email + domínio (seu exemplo)
SEARCH_TERM=@google.com,yahoo.com.br

# Caça a credenciais
# SEARCH_TERM=ghp_,sk-,Bearer,AKIA,api_key,token

# URLs e endpoints internos
# SEARCH_TERM=internal.company.com,api.company.local,localhost:3000,staging.company.com

# Busca de banco de dados
# SEARCH_TERM=mongodb://,mysql://,DATABASE_URL,connection_string

# Mix de emails corporativos
# SEARCH_TERM=@company.com,@corp.company.com,@internal.company.com,admin@company.com

# Configurações de paginação
RESULTS_PER_PAGE=30
PAGES=5

# Intervalo entre requisições (em segundos)
# Recomendado: 2-5 segundos para evitar rate limiting
SLEEP_TIME=2

# Range de datas para fazer a busca (opcional)
# IMPORTANTE: O filtro usa a data do último PUSH, não criação de arquivo
# Deixe comentado para buscar em todo o histórico do GitHub
#
# Para repositórios ativos recentemente (recomendado):
# START_DATE=2020-01-01
# END_DATE=2024-12-31
#
# Para repositórios mais antigos:
# START_DATE=2008-01-01  # GitHub existe desde 2008
# END_DATE=2024-12-31
#
# Exemplos práticos:
START_DATE=2020-01-01
END_DATE=2024-12-31
